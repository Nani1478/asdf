<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="munit-demo-test2-suite.xml" />
	<munit:test name="munit-demo-test2Flow-test" doc:id="573dd3e9-1909-4831-8842-7caaa8be8842" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Query" doc:id="82c5eb13-c3c5-45e5-be9b-7089e83a32f4" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c72ccf41-3e03-480c-ba83-98a6224b7de9" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java  --- readUrl('classpath://munitdemotest2Flowtest\mock_payload.dwl')]" mediaType="application/java " encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:spy doc:name="Spy Transform Message" doc:id="1af49c3b-0b13-4870-9ef3-c29eee0b34cb" processor="ee:transform">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="4ddd86d9-b2c0-4a9c-bfed-362a63fa9746" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:before-call >
					<munit-tools:assert doc:name="Assert payload" doc:id="d99b2d03-40dd-43ca-bb07-b5d49443a212" message="The payload does not match">
						<munit-tools:that ><![CDATA[#[%dw 2.0
import munitdemotest2Flowtest::spy_assert_payload
---
spy_assert_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:before-call>
				<munit-tools:after-call >
					<munit-tools:assert doc:name="Assert payload" doc:id="ddf7f3f3-d9ca-467e-9c21-b0589deac8d3" message="The payload does not match">
						<munit-tools:that ><![CDATA[#[%dw 2.0
import munitdemotest2Flowtest::spy_assert_payload1
---
spy_assert_payload1::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:after-call>
			</munit-tools:spy>
			<munit-tools:spy doc:name="Spy Logger" doc:id="3ed2632c-dbb4-44a3-9eae-10185da68486" processor="logger">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="eabd4d25-350b-454c-8756-13b0667bddd2" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:before-call >
					<munit-tools:assert doc:name="Assert payload" doc:id="94ac3914-6445-4e4c-a439-d67d5068a2e8" message="The payload does not match">
						<munit-tools:that ><![CDATA[#[%dw 2.0
import munitdemotest2Flowtest::spy_assert_payload2
---
spy_assert_payload2::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:before-call>
				<munit-tools:after-call >
					<munit-tools:assert doc:name="Assert payload" doc:id="3ca236a6-917f-47c5-9993-aec4e43a2487" message="The payload does not match">
						<munit-tools:that ><![CDATA[#[%dw 2.0
import munitdemotest2Flowtest::spy_assert_payload3
---
spy_assert_payload3::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:after-call>
			</munit-tools:spy>
			<munit:set-event doc:name="Set Input" doc:id="7ed998a8-010a-4623-afbc-d4da9fe9f090" >
				<munit:payload value="#[readUrl('classpath://munitdemotest2Flowtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://munitdemotest2Flowtest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to munit-demo-test2Flow" doc:id="cfbf8fb1-35bc-432c-b686-0228c519f143" name="munit-demo-test2Flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="2048c9fc-7c1e-4fcb-b6d6-217428c151b3" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import munitdemotest2Flowtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="e170199c-0221-4ad2-8663-16fc2043915b" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="4ddd86d9-b2c0-4a9c-bfed-362a63fa9746" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Logger" doc:id="c10fde17-47cd-4653-90fb-fb7258ce2a07" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="eabd4d25-350b-454c-8756-13b0667bddd2" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>


</mule>
